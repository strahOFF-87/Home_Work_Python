# Задача 1.
# Вашему другу, который тоже начал изучать Python, преподаватель дал такую задачу: есть три списка —
# основной и два побочных.
# В основном лежат элементы [1, 5, 3], а в побочных — [1, 5, 1, 5] и [1, 3, 1, 5, 3, 3] соответственно.
# Первый побочный закидывается в основной, там считается количество цифр 5, количество выводится на экран,
# и затем они удаляются из основного списка. После этого в основной закидывается второй побочный список,
# там считается количество цифр 3 и выводится на экран. В конце также выводится и сам список.
# Из интереса вы попросили вашего друга показать код его программы и поняли, что сделали это не зря —
# то, что вы увидели, повергло вас в шок и ужас. Вот сам код:
a = [1, 5, 3]
b = [1, 5, 1, 5]
c = [1, 3, 1, 5, 3, 3]
for i in b:
    a.append(i)
t = 0
for i in a:
    if i == 5:
        t += 1
print(t)
d = []
for i in a:
    if i != 5:
        d.append(i)
for i in c:
    d.append(i)
t = 0
for i in d:
    if i == 3:
        t += 1
print(t)
print(d)
# Используя знания о методах списков, а также о стиле программирования, помогите другу переписать программу.
# Не используйте дополнительные списки.
# Результат работы программы:
# Кол-во цифр 5 при первом объединении: 3
# Кол-во цифр 3 при втором объединении: 4
# Итоговый список: [1, 3, 1, 1, 1, 3, 1, 5, 3, 3]

###############################################################################
a = [1, 5, 3]
b = [1, 5, 1, 5]
c = [1, 3, 1, 5, 3, 3]
a += b
print('Кол-во цифр 5 при первом объединении:', a.count(5))
while 5 in a:
    a.remove(5)  # for _ in range(a.count(5)): a.remove(5)
a += c
print('Кол-во цифр 3 при втором объединении:', a.count(3))
print('Итоговый список:', a)

# a = [1, 5, 3]
# b = [1, 5, 1, 5]
# c = [1, 3, 1, 5, 3, 3]
#
# print("Количество 5:", len([x for x in b if x == 5]))
# print("Количество 3:", len([x for x in c if x == 3]))
# print('Итоговый список:', a)


# Задача 2.
# Два класса стоят в две отдельные шеренги. В каждом классе ученики выстроены по росту (по возрастанию):
# в одном классе от 160 см до 176 см с шагом 2, во втором классе — от 162 см до 180 см с шагом 3.
# Спустя какое-то время два класса объединяют в одну шеренгу и тоже выстраивают их по возрастанию.
# Напишите программу, которая генерирует списки роста для каждого в классе,
# затем объединяет их в один список и сортирует его в порядке возрастания.
# Выведите отсортированный список на экран.
# Формат вывода ответа:
# Отсортированный список учеников: [160, 162, …]

# class_1 = [160, 162, 164, 166, 168, 170, 172, 174, 176]  # range (160, 176, 2)
# class_2 = [162, 165, 168, 171, 174, 177, 180]  # range (162, 180, 3)
# print("Список по росту в классе 1",{class_1})

class_1, class_2 = list(range(160, 177, 2)), list(range(162, 181, 3))
class_1_2 = sorted(class_1 + class_2)
print(class_1)
print(class_2)
print(class_1_2)

# В базе данных магазина всякой всячины хранится список названий деталей и их стоимостей:
# shop = [['каретка', 1200], ['шатун', 1000], ['седло', 300], ['педаль', 100], ['седло', 1500], ['рама', 12000],
# ['обод', 2000], ['шатун', 200], ['седло', 2700]]
#
# Продавец решил, что считать количество и стоимость деталей вручную не очень удобно, поэтому решил попросить
# помощи у программиста, чтобы оптимизировать этот процесс.
# Напишите программу, которая запрашивает у пользователя деталь, считает их количество, а также общую стоимость.
# Пример:
# Название детали: седло
# Кол-во деталей — 3
# Общая стоимость — 4500

shop = [
    ['каретка', 1200],
    ['шатун', 1000],
    ['седло', 300],
    ['педаль', 100],
    ['седло', 1500],
    ['рама', 12000],
    ['обод', 2000],
    ['шатун', 200],
    ['седло', 2700],
]
name_guest = input("Введите название детали: ")
detale_count = 0
detale_price = 0
for name_shop in shop:
    if name_guest == name_shop[0]:
        detale_count += 1
        detale_price += name_shop[1]
print(detale_count)
print(detale_price)

# Задача 4.
# В честь своего дня рождения Артём решил закатить вечеринку у себя на даче. Он не стал рассылать приглашения,
# а просто сообщил всем: «Если хотите — приходите и своих друзей тоже зовите». В ходе вечеринки люди приходили
# и уходили, ночевать остались не все. К тому же и сама дача не резиновая — на ней помещается всего шесть человек.
# Дан изначальный список гостей — имена тех, кто пришёл к началу:
# guests = ['Петя', 'Ваня', 'Саша', 'Лиза', 'Катя']
#
# Напишите программу, которая спрашивает у пользователя, ушёл человек или пришёл новый гость, и, исходя из ответа,
# добавляет в список или удаляет из него нужное имя. При этом гостей может быть не больше шести. Имена запрашиваются
# до тех пор, пока пользователь не введёт сообщение «Пора спать».
# Пример:
# Сейчас на вечеринке 5 человек: [‘Петя’, ‘Ваня’, ‘Саша’, ‘Лиза’, ‘Катя’]
# Гость пришёл или ушёл? пришёл
# Имя гостя: Алекс
# Привет, Алекс!
#
# Сейчас на вечеринке 6 человек: [‘Петя’, ‘Ваня’, ‘Саша’, ‘Лиза’, ‘Катя’, ‘Алекс’]
# Гость пришёл или ушёл? пришёл
# Имя гостя: Гоша
# Прости, Гоша, но мест нет.
#
# Сейчас на вечеринке 6 человек: [‘Петя’, ‘Ваня’, ‘Саша’, ‘Лиза’, ‘Катя’, ‘Алекс’]
# Гость пришёл или ушёл? ушёл
# Имя гостя: Ваня
# Пока, Ваня!
#
# Сейчас на вечеринке 5 человек: [‘Петя’, ‘Саша’, ‘Лиза’, ‘Катя’,  ‘Алекс’]
# Гость пришёл или ушёл? Пора спать
#
# Вечеринка закончилась, все легли спать.
#
# guests = ['Петя', 'Ваня', 'Саша', 'Лиза', 'Катя']
#
# while True:
#     new_guest = input('Гость пришел или ушел? ').lower()
#     if new_guest == "пришел":
#         new_guest_name = input("Имя гостя, который пришел? ")
#         guests.append(new_guest_name)
#         if len(guests) > 6:
#             print(f"Прости, {new_guest}, но мест нет.")
#         else:
#             print(f"Привет, {new_guest}!")
#     elif new_guest == "ушел":
#         person_leaving = input("Кто уходит? ")
#         if person_leaving in guests:
#             guests.remove(person_leaving)
#             print(f"Пока, {person_leaving}!")
#         else:
#             print("Такого гостя нет.")


guests = ['Петя', 'Ваня', 'Саша', 'Лиза', 'Катя']

while True:
    print('Сейчас на вечеринке', len(guests), 'человек:', guests)
    answer = input('Гость пришёл или ушёл? ').lower()
    if answer == 'пришёл':
        guest_name = input('Имя гостя: ')
        if len(guests) < 6:
            print('Привет, ' + guest_name + '!')
            guests.append(guest_name)
        else:
            print('Прости, ' + guest_name + ', но мест нет')

    if answer == 'ушёл':
        guest_name = input('Имя гостя: ')
        print('Пока, ' + guest_name + '!')
        if guest_name in guests:
            guests.remove(guest_name)

    if answer == 'пора спать':
        print('Вечеринка закончилась, все легли спать.')
    break


